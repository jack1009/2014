#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.18444
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace _14_602
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="14-602")]
	public partial class TestConditionDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 擴充性方法定義
    partial void OnCreated();
    partial void InsertTestCondition(TestCondition instance);
    partial void UpdateTestCondition(TestCondition instance);
    partial void DeleteTestCondition(TestCondition instance);
    #endregion
		
		public TestConditionDataContext() : 
				base(global::_14_602.Properties.Settings.Default._14_602ConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public TestConditionDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TestConditionDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TestConditionDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TestConditionDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TestCondition> TestCondition
		{
			get
			{
				return this.GetTable<TestCondition>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestCondition")]
	public partial class TestCondition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _PreTurnEnable;
		
		private int _PreTurnSpeed;
		
		private double _PreTurnTime;
		
		private int _TestSpeed;
		
		private double _TestTime;
		
		private double _StandarValue;
		
		private double _TorqueValue;
		
		private System.Nullable<double> @__200gValue;
		
		private System.Nullable<double> @__400gValue;
		
		private System.Nullable<double> _MaskValue;
		
		private System.Nullable<double> @__100gValue;
		
		private System.Nullable<double> @__300gValue;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnPreTurnEnableChanging(int value);
    partial void OnPreTurnEnableChanged();
    partial void OnPreTurnSpeedChanging(int value);
    partial void OnPreTurnSpeedChanged();
    partial void OnPreTurnTimeChanging(double value);
    partial void OnPreTurnTimeChanged();
    partial void OnTestSpeedChanging(int value);
    partial void OnTestSpeedChanged();
    partial void OnTestTimeChanging(double value);
    partial void OnTestTimeChanged();
    partial void OnStandarValueChanging(double value);
    partial void OnStandarValueChanged();
    partial void OnTorqueValueChanging(double value);
    partial void OnTorqueValueChanged();
    partial void On_200gValueChanging(System.Nullable<double> value);
    partial void On_200gValueChanged();
    partial void On_400gValueChanging(System.Nullable<double> value);
    partial void On_400gValueChanged();
    partial void OnMaskValueChanging(System.Nullable<double> value);
    partial void OnMaskValueChanged();
    partial void On_100gValueChanging(System.Nullable<double> value);
    partial void On_100gValueChanged();
    partial void On_300gValueChanging(System.Nullable<double> value);
    partial void On_300gValueChanged();
    #endregion
		
		public TestCondition()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreTurnEnable", DbType="Int NOT NULL")]
		public int PreTurnEnable
		{
			get
			{
				return this._PreTurnEnable;
			}
			set
			{
				if ((this._PreTurnEnable != value))
				{
					this.OnPreTurnEnableChanging(value);
					this.SendPropertyChanging();
					this._PreTurnEnable = value;
					this.SendPropertyChanged("PreTurnEnable");
					this.OnPreTurnEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreTurnSpeed", DbType="Int NOT NULL")]
		public int PreTurnSpeed
		{
			get
			{
				return this._PreTurnSpeed;
			}
			set
			{
				if ((this._PreTurnSpeed != value))
				{
					this.OnPreTurnSpeedChanging(value);
					this.SendPropertyChanging();
					this._PreTurnSpeed = value;
					this.SendPropertyChanged("PreTurnSpeed");
					this.OnPreTurnSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreTurnTime", DbType="Float NOT NULL")]
		public double PreTurnTime
		{
			get
			{
				return this._PreTurnTime;
			}
			set
			{
				if ((this._PreTurnTime != value))
				{
					this.OnPreTurnTimeChanging(value);
					this.SendPropertyChanging();
					this._PreTurnTime = value;
					this.SendPropertyChanged("PreTurnTime");
					this.OnPreTurnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestSpeed", DbType="Int NOT NULL")]
		public int TestSpeed
		{
			get
			{
				return this._TestSpeed;
			}
			set
			{
				if ((this._TestSpeed != value))
				{
					this.OnTestSpeedChanging(value);
					this.SendPropertyChanging();
					this._TestSpeed = value;
					this.SendPropertyChanged("TestSpeed");
					this.OnTestSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestTime", DbType="Float NOT NULL")]
		public double TestTime
		{
			get
			{
				return this._TestTime;
			}
			set
			{
				if ((this._TestTime != value))
				{
					this.OnTestTimeChanging(value);
					this.SendPropertyChanging();
					this._TestTime = value;
					this.SendPropertyChanged("TestTime");
					this.OnTestTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandarValue", DbType="Float NOT NULL")]
		public double StandarValue
		{
			get
			{
				return this._StandarValue;
			}
			set
			{
				if ((this._StandarValue != value))
				{
					this.OnStandarValueChanging(value);
					this.SendPropertyChanging();
					this._StandarValue = value;
					this.SendPropertyChanged("StandarValue");
					this.OnStandarValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TorqueValue", DbType="Float NOT NULL")]
		public double TorqueValue
		{
			get
			{
				return this._TorqueValue;
			}
			set
			{
				if ((this._TorqueValue != value))
				{
					this.OnTorqueValueChanging(value);
					this.SendPropertyChanging();
					this._TorqueValue = value;
					this.SendPropertyChanged("TorqueValue");
					this.OnTorqueValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[200gValue]", Storage="__200gValue", DbType="Float")]
		public System.Nullable<double> _200gValue
		{
			get
			{
				return this.@__200gValue;
			}
			set
			{
				if ((this.@__200gValue != value))
				{
					this.On_200gValueChanging(value);
					this.SendPropertyChanging();
					this.@__200gValue = value;
					this.SendPropertyChanged("_200gValue");
					this.On_200gValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[400gValue]", Storage="__400gValue", DbType="Float")]
		public System.Nullable<double> _400gValue
		{
			get
			{
				return this.@__400gValue;
			}
			set
			{
				if ((this.@__400gValue != value))
				{
					this.On_400gValueChanging(value);
					this.SendPropertyChanging();
					this.@__400gValue = value;
					this.SendPropertyChanged("_400gValue");
					this.On_400gValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaskValue", DbType="Float")]
		public System.Nullable<double> MaskValue
		{
			get
			{
				return this._MaskValue;
			}
			set
			{
				if ((this._MaskValue != value))
				{
					this.OnMaskValueChanging(value);
					this.SendPropertyChanging();
					this._MaskValue = value;
					this.SendPropertyChanged("MaskValue");
					this.OnMaskValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[100gValue]", Storage="__100gValue", DbType="Float")]
		public System.Nullable<double> _100gValue
		{
			get
			{
				return this.@__100gValue;
			}
			set
			{
				if ((this.@__100gValue != value))
				{
					this.On_100gValueChanging(value);
					this.SendPropertyChanging();
					this.@__100gValue = value;
					this.SendPropertyChanged("_100gValue");
					this.On_100gValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[300gValue]", Storage="__300gValue", DbType="Float")]
		public System.Nullable<double> _300gValue
		{
			get
			{
				return this.@__300gValue;
			}
			set
			{
				if ((this.@__300gValue != value))
				{
					this.On_300gValueChanging(value);
					this.SendPropertyChanging();
					this.@__300gValue = value;
					this.SendPropertyChanged("_300gValue");
					this.On_300gValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
